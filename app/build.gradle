import org.gradle.work.ChangeType
import org.gradle.work.Incremental
import org.gradle.work.InputChanges

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.yechaoa.gradlex'
    compileSdk 32

    defaultConfig {
        applicationId "com.yechaoa.gradlex"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

repositories {
    // url
}

dependencies {

//    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    implementation('com.squareup.retrofit2:retrofit:2.9.0') {
//        exclude(group: "com.squareup.okhttp3", module: "okhttp")
        transitive(false)
    }

    implementation('com.squareup.okhttp3:okhttp') {
        version {
            strictly("5.0.0-alpha.11")
        }
    }

//    implementation( 'com.squareup.okhttp3:okhttp:4.10.0'){
//        force(true)
//    }


    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    if (project.hasProperty("isTest")) {
        println("---hasProperty isTest yes")
        if (Boolean.valueOf(getProperty('isTest'))) {
            println("---isTest true")

            // test
//            implementation 'com.yechaoa.gradlex.devtools:devtools:1.1.1'

        } else {
            println("---isTest false")

//            implementation 'com.yechaoa.gradlex.devtools:devtools:2.2.2'
        }
    } else {
        println("---hasProperty isTest no")
    }

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // 看Gradle源码用
//    implementation "com.android.tools.build:gradle:7.4"
}


/**
 * 强制依赖版本
 * 示例：com.squareup.okhttp3:okhttp:4.10.0
 */
configurations.all {
    // 开启版本冲突编译直接报错模式...
//    resolutionStrategy{
//        failOnVersionConflict()
//    }

    // 版本冲突解析策略
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.squareup.okhttp3' && requested.name == 'okhttp') {
            details.useVersion '4.10.0'
        }
        // 还可以使用startsWith通配，比如room-compiler、room-rxjava2、room-testing
//        if (requested.group == 'androidx.room' && requested.name.startsWith('room')) {
//            details.useVersion '2.5.0'
//        }
    }
}


project.beforeEvaluate {
    println("---project：beforeEvaluate Project开始评估，对象是 = " + project.name)
}

project.afterEvaluate {
    println("---project：afterEvaluate Project评估完毕，对象是 = " + project.name)
}

// -------------- Task --------------

tasks.register("yechaoa") {
    it.configure {
        description = "我是yechaoa，双击执行~"
        group = "help"
    }


    it.doFirst {
        println("${it.name} = doFirst 111")
    }
    it.doFirst {
        println("${it.name} = doFirst 222")
    }

    println("Task Name = " + it.name)

    it.doLast {
        println("${it.name} = doLast 111")
    }
    it.doLast {
        println("${it.name} = doLast 222")
    }
}

task()

/**
 * 自定义Task
 */
class YechaoaTask extends DefaultTask {

    @Internal
    def taskName = "default"

    @TaskAction
    def MyAction1() {
        println("$taskName -- MyAction1")
    }

    @TaskAction
    def MyAction2() {
        println("$taskName -- MyAction2")
    }
}
//tasks.register("yechaoa", YechaoaTask) {
//    taskName = "我是传入的Task Name "
//}


/**
 * Task 依赖
 */
def yechaoa111 = tasks.register("yechaoa111") {
    it.doLast {
        println("${it.name}")
    }
}

def yechaoa222 = tasks.register("yechaoa222") {
    it.doLast {
        println("${it.name}")
    }
}

yechaoa111.configure {
    dependsOn yechaoa222
}


/**
 * onlyIf
 */
//tasks.register("skipTask") { taskObj ->
//    taskObj.configure {
//        onlyIf {
//            def provider = providers.gradleProperty("yechaoa")
//            provider.present
//        }
//    }
//
//    taskObj.doLast {
//        println("${it.name} is Executed")
//    }
//}


/**
 * StopExecutionException
 */
//tasks.register("skipTask") { taskObj ->
//
//    taskObj.doFirst {
//        println("${it.name} is Executed doFirst")
//    }
//
//    taskObj.doLast {
//        def provider = providers.gradleProperty("yechaoa")
//        if (provider.present) {
//            throw new StopExecutionException()
//        }
//
//        println("${it.name} is Executed doLast")
//    }
//}


/**
 * enabled
 */
//tasks.register("skipTask") { taskObj ->
//    taskObj.configure {
//        enabled = true
//    }
//
//    taskObj.doLast {
//        println("${it.name} is Executed")
//    }
//}


/**
 * timeout
 */
//tasks.register("skipTask") { taskObj ->
//    taskObj.configure {
//        timeout = Duration.ofSeconds(10)
//    }
//
//    taskObj.doLast {
//        Thread.sleep(11 * 1000)
//        println("${it.name} is Executed")
//    }
//}

/**
 * 增量构建
 */
class CopyTask extends DefaultTask {

    // 指定增量输入属性
    @Incremental
    // 指定输入
    @InputFiles
    FileCollection from

    // 指定输出
    @OutputDirectory
    Directory to

//    // task action 执行
//    @TaskAction
//    void execute() {
//        File file = from.getSingleFile()
//        if (file.isDirectory()) {
//            from.getAsFileTree().each {
//                copyFileToDir(it, to)
//            }
//        } else {
//            copyFileToDir(from, to)
//        }
//    }

    // task action 执行
    @TaskAction
    void execute(InputChanges inputChanges) {

        boolean incremental = inputChanges.incremental
        println("isIncremental = $incremental")

        inputChanges.getFileChanges(from).each {
            if (it.fileType != FileType.DIRECTORY) {
                ChangeType changeType = it.changeType
                String fileName = it.file.name
                println("ChangeType = $changeType , ChangeFile = $fileName")

                if (changeType != ChangeType.REMOVED) {
                    copyFileToDir(it.file, to)
                }
            }
        }

    }

    /**
     * 复制文件到文件夹
     * @param src 要复制的文件
     * @param dir 接收的文件夹
     * @return
     */
    static def copyFileToDir(File file, Directory dir) {
        File dest = new File("${dir.getAsFile().path}/${file.name}")

        if (!dest.exists()) {
            dest.createNewFile()
        }

        dest.withOutputStream {
            it.write(new FileInputStream(file).getBytes())
        }
    }

}

tasks.register("CopyTask", CopyTask) {
    from = files('from')
    to = layout.projectDirectory.dir('to')
}


/**
 * 查找Task
 */
def aaa = tasks.findByName("yechaoa").doFirst {
    println("yechaoa excuted doFirst by findByName")
}

def bbb = tasks.findByPath("yechaoa").doFirst {
    println("yechaoa excuted doFirst by findByPath")
}

tasks.withType(DefaultTask).configureEach(task -> {
    if (task.name.toLowerCase().contains("copytask")) {
        println(task.class.name)
    }
})

tasks.configureEach(task -> {
    // do something
})

tasks.each {
    // do something
}

tasks.forEach(task -> {
    // do something
})

tasks.named("yechaoa") {
    it.doFirst {
        println("yechaoa excuted doFirst by named")
    }
}
